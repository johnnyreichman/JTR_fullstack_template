{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Buffer } from 'buffer/';\n/** @class */\n\nvar CognitoJwtToken = function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    _classCallCheck(this, CognitoJwtToken); // Assign object\n\n\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  CognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  };\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n\n\n  CognitoJwtToken.prototype.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  };\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n\n\n  CognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  };\n  /**\n   * @returns {object} the token's payload.\n   */\n\n\n  CognitoJwtToken.prototype.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport default CognitoJwtToken;","map":{"version":3,"sources":["/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js"],"names":["_classCallCheck","instance","Constructor","TypeError","Buffer","CognitoJwtToken","token","jwtToken","payload","decodePayload","prototype","getJwtToken","getExpiration","exp","getIssuedAt","iat","split","JSON","parse","from","toString","err"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;AAEzJ;;;;;;;;;;;;;;;;;;AAiBA,SAASC,MAAT,QAAuB,SAAvB;AAEA;;AAEA,IAAIC,eAAe,GAAG,YAAY;AAChC;;;;AAIA,WAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BN,IAAAA,eAAe,CAAC,IAAD,EAAOK,eAAP,CAAf,CAD8B,CAG9B;;;AACA,SAAKE,QAAL,GAAgBD,KAAK,IAAI,EAAzB;AACA,SAAKE,OAAL,GAAe,KAAKC,aAAL,EAAf;AACD;AAED;;;;;AAKAJ,EAAAA,eAAe,CAACK,SAAhB,CAA0BC,WAA1B,GAAwC,SAASA,WAAT,GAAuB;AAC7D,WAAO,KAAKJ,QAAZ;AACD,GAFD;AAIA;;;;;AAKAF,EAAAA,eAAe,CAACK,SAAhB,CAA0BE,aAA1B,GAA0C,SAASA,aAAT,GAAyB;AACjE,WAAO,KAAKJ,OAAL,CAAaK,GAApB;AACD,GAFD;AAIA;;;;;AAKAR,EAAAA,eAAe,CAACK,SAAhB,CAA0BI,WAA1B,GAAwC,SAASA,WAAT,GAAuB;AAC7D,WAAO,KAAKN,OAAL,CAAaO,GAApB;AACD,GAFD;AAIA;;;;;AAKAV,EAAAA,eAAe,CAACK,SAAhB,CAA0BD,aAA1B,GAA0C,SAASA,aAAT,GAAyB;AACjE,QAAID,OAAO,GAAG,KAAKD,QAAL,CAAcS,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;;AACA,QAAI;AACF,aAAOC,IAAI,CAACC,KAAL,CAAWd,MAAM,CAACe,IAAP,CAAYX,OAAZ,EAAqB,QAArB,EAA+BY,QAA/B,CAAwC,MAAxC,CAAX,CAAP;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,aAAO,EAAP;AACD;AACF,GAPD;;AASA,SAAOhB,eAAP;AACD,CAvDqB,EAAtB;;AAyDA,eAAeA,eAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\n\nvar CognitoJwtToken = function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    _classCallCheck(this, CognitoJwtToken);\n\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  CognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  };\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n\n\n  CognitoJwtToken.prototype.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  };\n\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n\n\n  CognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  };\n\n  /**\n   * @returns {object} the token's payload.\n   */\n\n\n  CognitoJwtToken.prototype.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport default CognitoJwtToken;"]},"metadata":{},"sourceType":"module"}