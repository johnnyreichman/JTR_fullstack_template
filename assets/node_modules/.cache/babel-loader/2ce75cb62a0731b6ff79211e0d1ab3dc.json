{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\n\nvar Kind = exports.Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","map":{"version":3,"sources":["/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/@aws-amplify/api/node_modules/graphql/language/kinds.js"],"names":["Object","defineProperty","exports","value","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","VARIABLE","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","DIRECTIVE_DEFINITION"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA;;;;;;;;;AASA;;;;AAGA,IAAIC,IAAI,GAAGF,OAAO,CAACE,IAAR,GAAeJ,MAAM,CAACK,MAAP,CAAc;AACtC;AACAC,EAAAA,IAAI,EAAE,MAFgC;AAItC;AACAC,EAAAA,QAAQ,EAAE,UAL4B;AAMtCC,EAAAA,oBAAoB,EAAE,qBANgB;AAOtCC,EAAAA,mBAAmB,EAAE,oBAPiB;AAQtCC,EAAAA,QAAQ,EAAE,UAR4B;AAStCC,EAAAA,aAAa,EAAE,cATuB;AAUtCC,EAAAA,KAAK,EAAE,OAV+B;AAWtCC,EAAAA,QAAQ,EAAE,UAX4B;AAatC;AACAC,EAAAA,eAAe,EAAE,gBAdqB;AAetCC,EAAAA,eAAe,EAAE,gBAfqB;AAgBtCC,EAAAA,mBAAmB,EAAE,oBAhBiB;AAkBtC;AACAC,EAAAA,GAAG,EAAE,UAnBiC;AAoBtCC,EAAAA,KAAK,EAAE,YApB+B;AAqBtCC,EAAAA,MAAM,EAAE,aArB8B;AAsBtCC,EAAAA,OAAO,EAAE,cAtB6B;AAuBtCC,EAAAA,IAAI,EAAE,WAvBgC;AAwBtCC,EAAAA,IAAI,EAAE,WAxBgC;AAyBtCC,EAAAA,IAAI,EAAE,WAzBgC;AA0BtCC,EAAAA,MAAM,EAAE,aA1B8B;AA2BtCC,EAAAA,YAAY,EAAE,aA3BwB;AA6BtC;AACAC,EAAAA,SAAS,EAAE,WA9B2B;AAgCtC;AACAC,EAAAA,UAAU,EAAE,WAjC0B;AAkCtCC,EAAAA,SAAS,EAAE,UAlC2B;AAmCtCC,EAAAA,aAAa,EAAE,aAnCuB;AAqCtC;AACAC,EAAAA,iBAAiB,EAAE,kBAtCmB;AAuCtCC,EAAAA,yBAAyB,EAAE,yBAvCW;AAyCtC;AACAC,EAAAA,sBAAsB,EAAE,sBA1Cc;AA2CtCC,EAAAA,sBAAsB,EAAE,sBA3Cc;AA4CtCC,EAAAA,gBAAgB,EAAE,iBA5CoB;AA6CtCC,EAAAA,sBAAsB,EAAE,sBA7Cc;AA8CtCC,EAAAA,yBAAyB,EAAE,yBA9CW;AA+CtCC,EAAAA,qBAAqB,EAAE,qBA/Ce;AAgDtCC,EAAAA,oBAAoB,EAAE,oBAhDgB;AAiDtCC,EAAAA,qBAAqB,EAAE,qBAjDe;AAkDtCC,EAAAA,4BAA4B,EAAE,2BAlDQ;AAoDtC;AACAC,EAAAA,qBAAqB,EAAE,qBArDe;AAsDtCC,EAAAA,qBAAqB,EAAE,qBAtDe;AAuDtCC,EAAAA,wBAAwB,EAAE,wBAvDY;AAwDtCC,EAAAA,oBAAoB,EAAE,oBAxDgB;AAyDtCC,EAAAA,mBAAmB,EAAE,mBAzDiB;AA0DtCC,EAAAA,2BAA2B,EAAE,0BA1DS;AA4DtC;AACAC,EAAAA,oBAAoB,EAAE;AA7DgB,CAAd,CAA1B;AAgEA","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind = exports.Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n\n  // Directives\n  DIRECTIVE: 'Directive',\n\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n */"]},"metadata":{},"sourceType":"script"}