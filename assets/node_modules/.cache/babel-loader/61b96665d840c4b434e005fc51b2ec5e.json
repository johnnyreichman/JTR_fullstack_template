{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Logger_1 = require(\"./Logger\");\n\nvar Facet_1 = require(\"./Facet\");\n\nvar logger = new Logger_1.ConsoleLogger('Signer'),\n    url = require('url'),\n    crypto = Facet_1.AWS['util'].crypto;\n\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\n\nvar encrypt = function encrypt(key, src, encoding) {\n  return crypto.lib.createHmac('sha256', key).update(src, 'utf8').digest(encoding);\n};\n\nvar hash = function hash(src) {\n  var arg = src || '';\n  return crypto.createHash('sha256').update(arg, 'utf8').digest('hex');\n};\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\n\n\nvar escape_RFC3986 = function escape_RFC3986(component) {\n  return component.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n};\n/**\n * @private\n * Create canonical query string\n *\n*/\n\n\nvar canonical_query = function canonical_query(query) {\n  if (!query || query.length === 0) {\n    return '';\n  }\n\n  return query.split('&').map(function (e) {\n    var key_val = e.split('=');\n\n    if (key_val.length === 1) {\n      return e;\n    } else {\n      var reencoded_val = escape_RFC3986(key_val[1]);\n      return key_val[0] + '=' + reencoded_val;\n    }\n  }).sort(function (a, b) {\n    var key_a = a.split('=')[0];\n    var key_b = b.split('=')[0];\n\n    if (key_a === key_b) {\n      return a < b ? -1 : 1;\n    } else {\n      return key_a < key_b ? -1 : 1;\n    }\n  }).join('&');\n};\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\n\n\nvar canonical_headers = function canonical_headers(headers) {\n  if (!headers || Object.keys(headers).length === 0) {\n    return '';\n  }\n\n  return Object.keys(headers).map(function (key) {\n    return {\n      key: key.toLowerCase(),\n      value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : ''\n    };\n  }).sort(function (a, b) {\n    return a.key < b.key ? -1 : 1;\n  }).map(function (item) {\n    return item.key + ':' + item.value;\n  }).join('\\n') + '\\n';\n};\n/**\n* List of header keys included in the canonical headers.\n* @access private\n*/\n\n\nvar signed_headers = function signed_headers(headers) {\n  return Object.keys(headers).map(function (key) {\n    return key.toLowerCase();\n  }).sort().join(';');\n};\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\n\n\nvar canonical_request = function canonical_request(request) {\n  var url_info = url.parse(request.url);\n  return [request.method || '/', encodeURIComponent(url_info.pathname).replace(/%2F/ig, '/'), canonical_query(url_info.query), canonical_headers(request.headers), signed_headers(request.headers), hash(request.data)].join('\\n');\n};\n\nvar parse_service_info = function parse_service_info(request) {\n  var url_info = url.parse(request.url),\n      host = url_info.host;\n  var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n  var parsed = (matched || []).slice(1, 3);\n\n  if (parsed[1] === 'es') {\n    // Elastic Search\n    parsed = parsed.reverse();\n  }\n\n  return {\n    service: request.service || parsed[0],\n    region: request.region || parsed[1]\n  };\n};\n\nvar credential_scope = function credential_scope(d_str, region, service) {\n  return [d_str, region, service, 'aws4_request'].join('/');\n};\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\n\n\nvar string_to_sign = function string_to_sign(algorithm, canonical_request, dt_str, scope) {\n  return [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\n\n\nvar get_signing_key = function get_signing_key(secret_key, d_str, service_info) {\n  logger.debug(service_info);\n  var k = 'AWS4' + secret_key,\n      k_date = encrypt(k, d_str),\n      k_region = encrypt(k_date, service_info.region),\n      k_service = encrypt(k_region, service_info.service),\n      k_signing = encrypt(k_service, 'aws4_request');\n  return k_signing;\n};\n\nvar get_signature = function get_signature(signing_key, str_to_sign) {\n  return encrypt(signing_key, str_to_sign, 'hex');\n};\n/**\n* @private\n* Create authorization header\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n*/\n\n\nvar get_authorization_header = function get_authorization_header(algorithm, access_key, scope, signed_headers, signature) {\n  return [algorithm + ' ' + 'Credential=' + access_key + '/' + scope, 'SignedHeaders=' + signed_headers, 'Signature=' + signature].join(', ');\n};\n/**\n* Sign a HTTP request, add 'Authorization' header to request param\n* @method sign\n* @memberof Signer\n* @static\n*\n* @param {object} request - HTTP request object\n<pre>\nrequest: {\n    method: GET | POST | PUT ...\n    url: ...,\n    headers: {\n        header1: ...\n    },\n    data: data\n}\n</pre>\n* @param {object} access_info - AWS access credential info\n<pre>\naccess_info: {\n    access_key: ...,\n    secret_key: ...,\n    session_token: ...\n}\n</pre>\n* @param {object} [service_info] - AWS service type and region, optional,\n*                                  if not provided then parse out from url\n<pre>\nservice_info: {\n    service: ...,\n    region: ...\n}\n</pre>\n*\n* @returns {object} Signed HTTP request\n*/\n\n\nvar sign = function sign(request, access_info, service_info) {\n  if (service_info === void 0) {\n    service_info = null;\n  }\n\n  request.headers = request.headers || {}; // datetime string and date string\n\n  var dt = new Date(),\n      dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''),\n      d_str = dt_str.substr(0, 8);\n  var url_info = url.parse(request.url);\n  request.headers['host'] = url_info.host;\n  request.headers['x-amz-date'] = dt_str;\n\n  if (access_info.session_token) {\n    request.headers['X-Amz-Security-Token'] = access_info.session_token;\n  } // Task 1: Create a Canonical Request\n\n\n  var request_str = canonical_request(request);\n  logger.debug(request_str); // Task 2: Create a String to Sign\n\n  var serviceInfo = service_info || parse_service_info(request),\n      scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),\n      str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope); // Task 3: Calculate the Signature\n\n  var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo),\n      signature = get_signature(signing_key, str_to_sign); // Task 4: Adding the Signing information to the Request\n\n  var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\n  request.headers['Authorization'] = authorization_header;\n  return request;\n};\n\nvar signUrl = function signUrl(urlToSign, accessInfo, serviceInfo, expiration) {\n  var now = new Date().toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n  var today = now.substr(0, 8); // Intentionally discarding search\n\n  var _a = url.parse(urlToSign, true, true),\n      search = _a.search,\n      parsedUrl = __rest(_a, [\"search\"]);\n\n  var host = parsedUrl.host;\n  var signedHeaders = {\n    host: host\n  };\n\n  var _b = serviceInfo || parse_service_info({\n    url: url.format(parsedUrl)\n  }),\n      region = _b.region,\n      service = _b.service;\n\n  var credentialScope = credential_scope(today, region, service); // IoT service does not allow the session token in the canonical request\n  // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n\n  var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\n\n  var queryParams = __assign({\n    'X-Amz-Algorithm': DEFAULT_ALGORITHM,\n    'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),\n    'X-Amz-Date': now.substr(0, 16)\n  }, sessionTokenRequired ? {\n    'X-Amz-Security-Token': \"\" + accessInfo.session_token\n  } : {}, expiration ? {\n    'X-Amz-Expires': \"\" + expiration\n  } : {}, {\n    'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',')\n  });\n\n  var canonicalRequest = canonical_request({\n    method: 'GET',\n    url: url.format(__assign({}, parsedUrl, {\n      query: __assign({}, parsedUrl.query, queryParams)\n    })),\n    headers: signedHeaders\n  });\n  var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\n  var signing_key = get_signing_key(accessInfo.secret_key, today, {\n    region: region,\n    service: service\n  });\n  var signature = get_signature(signing_key, stringToSign);\n\n  var additionalQueryParams = __assign({\n    'X-Amz-Signature': signature\n  }, accessInfo.session_token && {\n    'X-Amz-Security-Token': accessInfo.session_token\n  });\n\n  var result = url.format({\n    protocol: parsedUrl.protocol,\n    slashes: true,\n    hostname: parsedUrl.hostname,\n    port: parsedUrl.port,\n    pathname: parsedUrl.pathname,\n    query: __assign({}, parsedUrl.query, queryParams, additionalQueryParams)\n  });\n  return result;\n};\n/**\n* AWS request signer.\n* Refer to {@link http://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html|Signature Version 4}\n*\n* @class Signer\n*/\n\n\nvar Signer =\n/** @class */\nfunction () {\n  function Signer() {}\n\n  Signer.sign = sign;\n  Signer.signUrl = signUrl;\n  return Signer;\n}();\n\nexports.default = Signer;","map":{"version":3,"sources":["../src/Signer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Logger_1 = require(\"./Logger\");\nvar Facet_1 = require(\"./Facet\");\nvar logger = new Logger_1.ConsoleLogger('Signer'), url = require('url'), crypto = Facet_1.AWS['util'].crypto;\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\nvar encrypt = function (key, src, encoding) {\n    return crypto.lib.createHmac('sha256', key).update(src, 'utf8').digest(encoding);\n};\nvar hash = function (src) {\n    var arg = src || '';\n    return crypto.createHash('sha256').update(arg, 'utf8').digest('hex');\n};\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\nvar escape_RFC3986 = function (component) {\n    return component.replace(/[!'()*]/g, function (c) {\n        return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n};\n/**\n * @private\n * Create canonical query string\n *\n*/\nvar canonical_query = function (query) {\n    if (!query || query.length === 0) {\n        return '';\n    }\n    return query.split('&')\n        .map(function (e) {\n        var key_val = e.split('=');\n        if (key_val.length === 1) {\n            return e;\n        }\n        else {\n            var reencoded_val = escape_RFC3986(key_val[1]);\n            return key_val[0] + '=' + reencoded_val;\n        }\n    }).sort(function (a, b) {\n        var key_a = a.split('=')[0];\n        var key_b = b.split('=')[0];\n        if (key_a === key_b) {\n            return a < b ? -1 : 1;\n        }\n        else {\n            return key_a < key_b ? -1 : 1;\n        }\n    }).join('&');\n};\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\nvar canonical_headers = function (headers) {\n    if (!headers || Object.keys(headers).length === 0) {\n        return '';\n    }\n    return Object.keys(headers)\n        .map(function (key) {\n        return {\n            key: key.toLowerCase(),\n            value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : ''\n        };\n    })\n        .sort(function (a, b) {\n        return a.key < b.key ? -1 : 1;\n    })\n        .map(function (item) {\n        return item.key + ':' + item.value;\n    })\n        .join('\\n') + '\\n';\n};\n/**\n* List of header keys included in the canonical headers.\n* @access private\n*/\nvar signed_headers = function (headers) {\n    return Object.keys(headers)\n        .map(function (key) { return key.toLowerCase(); })\n        .sort()\n        .join(';');\n};\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\nvar canonical_request = function (request) {\n    var url_info = url.parse(request.url);\n    return [\n        request.method || '/',\n        encodeURIComponent(url_info.pathname).replace(/%2F/ig, '/'),\n        canonical_query(url_info.query),\n        canonical_headers(request.headers),\n        signed_headers(request.headers),\n        hash(request.data)\n    ].join('\\n');\n};\nvar parse_service_info = function (request) {\n    var url_info = url.parse(request.url), host = url_info.host;\n    var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n    var parsed = (matched || []).slice(1, 3);\n    if (parsed[1] === 'es') { // Elastic Search\n        parsed = parsed.reverse();\n    }\n    return {\n        service: request.service || parsed[0],\n        region: request.region || parsed[1]\n    };\n};\nvar credential_scope = function (d_str, region, service) {\n    return [\n        d_str,\n        region,\n        service,\n        'aws4_request',\n    ].join('/');\n};\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\nvar string_to_sign = function (algorithm, canonical_request, dt_str, scope) {\n    return [\n        algorithm,\n        dt_str,\n        scope,\n        hash(canonical_request)\n    ].join('\\n');\n};\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\nvar get_signing_key = function (secret_key, d_str, service_info) {\n    logger.debug(service_info);\n    var k = ('AWS4' + secret_key), k_date = encrypt(k, d_str), k_region = encrypt(k_date, service_info.region), k_service = encrypt(k_region, service_info.service), k_signing = encrypt(k_service, 'aws4_request');\n    return k_signing;\n};\nvar get_signature = function (signing_key, str_to_sign) {\n    return encrypt(signing_key, str_to_sign, 'hex');\n};\n/**\n* @private\n* Create authorization header\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n*/\nvar get_authorization_header = function (algorithm, access_key, scope, signed_headers, signature) {\n    return [\n        algorithm + ' ' + 'Credential=' + access_key + '/' + scope,\n        'SignedHeaders=' + signed_headers,\n        'Signature=' + signature\n    ].join(', ');\n};\n/**\n* Sign a HTTP request, add 'Authorization' header to request param\n* @method sign\n* @memberof Signer\n* @static\n*\n* @param {object} request - HTTP request object\n<pre>\nrequest: {\n    method: GET | POST | PUT ...\n    url: ...,\n    headers: {\n        header1: ...\n    },\n    data: data\n}\n</pre>\n* @param {object} access_info - AWS access credential info\n<pre>\naccess_info: {\n    access_key: ...,\n    secret_key: ...,\n    session_token: ...\n}\n</pre>\n* @param {object} [service_info] - AWS service type and region, optional,\n*                                  if not provided then parse out from url\n<pre>\nservice_info: {\n    service: ...,\n    region: ...\n}\n</pre>\n*\n* @returns {object} Signed HTTP request\n*/\nvar sign = function (request, access_info, service_info) {\n    if (service_info === void 0) { service_info = null; }\n    request.headers = request.headers || {};\n    // datetime string and date string\n    var dt = new Date(), dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''), d_str = dt_str.substr(0, 8);\n    var url_info = url.parse(request.url);\n    request.headers['host'] = url_info.host;\n    request.headers['x-amz-date'] = dt_str;\n    if (access_info.session_token) {\n        request.headers['X-Amz-Security-Token'] = access_info.session_token;\n    }\n    // Task 1: Create a Canonical Request\n    var request_str = canonical_request(request);\n    logger.debug(request_str);\n    // Task 2: Create a String to Sign\n    var serviceInfo = service_info || parse_service_info(request), scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service), str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope);\n    // Task 3: Calculate the Signature\n    var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo), signature = get_signature(signing_key, str_to_sign);\n    // Task 4: Adding the Signing information to the Request\n    var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\n    request.headers['Authorization'] = authorization_header;\n    return request;\n};\nvar signUrl = function (urlToSign, accessInfo, serviceInfo, expiration) {\n    var now = new Date().toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    var today = now.substr(0, 8);\n    // Intentionally discarding search\n    var _a = url.parse(urlToSign, true, true), search = _a.search, parsedUrl = __rest(_a, [\"search\"]);\n    var host = parsedUrl.host;\n    var signedHeaders = { host: host };\n    var _b = serviceInfo || parse_service_info({ url: url.format(parsedUrl) }), region = _b.region, service = _b.service;\n    var credentialScope = credential_scope(today, region, service);\n    // IoT service does not allow the session token in the canonical request\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n    var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\n    var queryParams = __assign({ 'X-Amz-Algorithm': DEFAULT_ALGORITHM, 'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'), 'X-Amz-Date': now.substr(0, 16) }, (sessionTokenRequired ? { 'X-Amz-Security-Token': \"\" + accessInfo.session_token } : {}), (expiration ? { 'X-Amz-Expires': \"\" + expiration } : {}), { 'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',') });\n    var canonicalRequest = canonical_request({\n        method: 'GET',\n        url: url.format(__assign({}, parsedUrl, { query: __assign({}, parsedUrl.query, queryParams) })),\n        headers: signedHeaders,\n    });\n    var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\n    var signing_key = get_signing_key(accessInfo.secret_key, today, { region: region, service: service });\n    var signature = get_signature(signing_key, stringToSign);\n    var additionalQueryParams = __assign({ 'X-Amz-Signature': signature }, (accessInfo.session_token && { 'X-Amz-Security-Token': accessInfo.session_token }));\n    var result = url.format({\n        protocol: parsedUrl.protocol,\n        slashes: true,\n        hostname: parsedUrl.hostname,\n        port: parsedUrl.port,\n        pathname: parsedUrl.pathname,\n        query: __assign({}, parsedUrl.query, queryParams, additionalQueryParams)\n    });\n    return result;\n};\n/**\n* AWS request signer.\n* Refer to {@link http://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html|Signature Version 4}\n*\n* @class Signer\n*/\nvar Signer = /** @class */ (function () {\n    function Signer() {\n    }\n    Signer.sign = sign;\n    Signer.signUrl = signUrl;\n    return Signer;\n}());\nexports.default = Signer;\n//# sourceMappingURL=Signer.js.map"]},"metadata":{},"sourceType":"script"}