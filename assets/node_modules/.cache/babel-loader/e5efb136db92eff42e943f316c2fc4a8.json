{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\n\nvar _location = require('../language/location');\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nfunction printError(error) {\n  var printedLocations = [];\n\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, (0, _location.getLocation)(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","map":{"version":3,"sources":["/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/@aws-amplify/api/node_modules/graphql/error/printError.js"],"names":["Object","defineProperty","exports","value","printError","_location","require","error","printedLocations","nodes","forEach","node","loc","push","highlightSourceAtLocation","source","getLocation","start","locations","location","length","message","concat","join","line","lineOffset","locationOffset","columnOffset","getColumnOffset","contextLine","contextColumn","column","prevLineNum","toString","lineNum","nextLineNum","padLen","lines","body","split","whitespace","outputLines","name","lpad","filter","Boolean","len","Array","str"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\n\nvar _location = require('../language/location');\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nfunction printError(error) {\n  var printedLocations = [];\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, (0, _location.getLocation)(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}"]},"metadata":{},"sourceType":"script"}