{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport UserAgent from './UserAgent';\n/** @class */\n\nvar Client = function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   */\n  function Client(region, endpoint) {\n    _classCallCheck(this, Client);\n\n    this.endpoint = endpoint || 'https://cognito-idp.' + region + '.amazonaws.com/';\n    this.userAgent = UserAgent.prototype.userAgent || 'aws-amplify/0.1.x js';\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n  */\n\n\n  Client.prototype.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': 'AWSCognitoIdentityProviderService.' + operation,\n      'X-Amz-User-Agent': this.userAgent\n    };\n    var options = {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    };\n    var response = void 0;\n    var responseJsonData = void 0;\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n\n      throw err;\n    }).then(function (resp) {\n      return resp.json().catch(function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data; // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n\n      var code = (data.__type || data.code).split('#').pop();\n      var error = {\n        code: code,\n        name: code,\n        message: data.message || data.Message || null\n      };\n      return callback(error);\n    }).catch(function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = {\n            code: code,\n            name: code,\n            statusCode: response.status,\n            message: response.status ? response.status.toString() : null\n          };\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        } // otherwise check if error is Network error\n\n      } else if (err instanceof Error && err.message === 'Network error') {\n        var _error = {\n          code: 'NetworkError',\n          name: err.name,\n          message: err.message\n        };\n        return callback(_error);\n      } else {\n        return callback(err);\n      }\n    });\n  };\n\n  return Client;\n}();\n\nexport default Client;","map":{"version":3,"sources":["/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/amazon-cognito-identity-js/es/Client.js"],"names":["_classCallCheck","instance","Constructor","TypeError","UserAgent","Client","region","endpoint","userAgent","prototype","request","operation","params","callback","headers","options","method","mode","cache","body","JSON","stringify","response","responseJsonData","fetch","then","resp","err","Error","json","catch","data","ok","code","__type","split","pop","error","name","message","Message","get","statusCode","status","toString","ex","_error"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport UserAgent from './UserAgent';\n/** @class */\n\nvar Client = function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   */\n  function Client(region, endpoint) {\n    _classCallCheck(this, Client);\n\n    this.endpoint = endpoint || 'https://cognito-idp.' + region + '.amazonaws.com/';\n    this.userAgent = UserAgent.prototype.userAgent || 'aws-amplify/0.1.x js';\n  }\n\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n  */\n\n\n  Client.prototype.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': 'AWSCognitoIdentityProviderService.' + operation,\n      'X-Amz-User-Agent': this.userAgent\n    };\n\n    var options = {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    };\n\n    var response = void 0;\n    var responseJsonData = void 0;\n\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n      throw err;\n    }).then(function (resp) {\n      return resp.json().catch(function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data;\n\n      // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n      var code = (data.__type || data.code).split('#').pop();\n      var error = {\n        code: code,\n        name: code,\n        message: data.message || data.Message || null\n      };\n      return callback(error);\n    }).catch(function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = {\n            code: code,\n            name: code,\n            statusCode: response.status,\n            message: response.status ? response.status.toString() : null\n          };\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        }\n        // otherwise check if error is Network error\n      } else if (err instanceof Error && err.message === 'Network error') {\n        var _error = {\n          code: 'NetworkError',\n          name: err.name,\n          message: err.message\n        };\n        return callback(_error);\n      } else {\n        return callback(err);\n      }\n    });\n  };\n\n  return Client;\n}();\n\nexport default Client;"]},"metadata":{},"sourceType":"module"}