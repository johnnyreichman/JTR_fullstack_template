{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Logger_1 = require(\"./Logger\");\n\nvar logger = new Logger_1.ConsoleLogger('Parser');\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser() {}\n\n  Parser.parseMobilehubConfig = function (config) {\n    var amplifyConfig = {}; // Analytics\n\n    if (config['aws_mobile_analytics_app_id']) {\n      var Analytics = {\n        AWSPinpoint: {\n          appId: config['aws_mobile_analytics_app_id'],\n          region: config['aws_mobile_analytics_app_region']\n        }\n      };\n      amplifyConfig.Analytics = Analytics;\n    } // Auth\n\n\n    if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n      var Auth = {\n        userPoolId: config['aws_user_pools_id'],\n        userPoolWebClientId: config['aws_user_pools_web_client_id'],\n        region: config['aws_cognito_region'],\n        identityPoolId: config['aws_cognito_identity_pool_id'],\n        mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable' ? true : false\n      };\n      amplifyConfig.Auth = Auth;\n    } // Storage\n\n\n    var storageConfig;\n\n    if (config['aws_user_files_s3_bucket']) {\n      storageConfig = {\n        AWSS3: {\n          bucket: config['aws_user_files_s3_bucket'],\n          region: config['aws_user_files_s3_bucket_region']\n        }\n      };\n    } else {\n      storageConfig = config ? config.Storage || config : {};\n    }\n\n    amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n    amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n    amplifyConfig.Storage = Object.assign({}, storageConfig);\n    logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n    return amplifyConfig;\n  };\n\n  return Parser;\n}();\n\nexports.default = Parser;","map":{"version":3,"sources":["../src/Parser.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAM,MAAM,GAAG,IAAI,QAAA,CAAA,aAAJ,CAAW,QAAX,CAAf;;AAEA,IAAA,MAAA;AAAA;AAAA,YAAA;AAAA,WAAA,MAAA,GAAA,CA4CC;;AA3CU,EAAA,MAAA,CAAA,oBAAA,GAAP,UAA4B,MAA5B,EAAkC;AAC9B,QAAM,aAAa,GAAkB,EAArC,CAD8B,CAE9B;;AACA,QAAI,MAAM,CAAC,6BAAD,CAAV,EAA2C;AACvC,UAAM,SAAS,GAAG;AACd,QAAA,WAAW,EAAE;AACT,UAAA,KAAK,EAAE,MAAM,CAAC,6BAAD,CADJ;AAET,UAAA,MAAM,EAAE,MAAM,CAAC,iCAAD;AAFL;AADC,OAAlB;AAMA,MAAA,aAAa,CAAC,SAAd,GAA0B,SAA1B;AACH,KAX6B,CAa9B;;;AACA,QAAI,MAAM,CAAC,8BAAD,CAAN,IAA0C,MAAM,CAAC,mBAAD,CAApD,EAA2E;AACvE,UAAM,IAAI,GAAG;AACT,QAAA,UAAU,EAAE,MAAM,CAAC,mBAAD,CADT;AAET,QAAA,mBAAmB,EAAE,MAAM,CAAC,8BAAD,CAFlB;AAGT,QAAA,MAAM,EAAE,MAAM,CAAC,oBAAD,CAHL;AAIT,QAAA,cAAc,EAAE,MAAM,CAAC,8BAAD,CAJb;AAKT,QAAA,eAAe,EAAE,MAAM,CAAC,uBAAD,CAAN,KAAoC,QAApC,GAA8C,IAA9C,GAAoD;AAL5D,OAAb;AAOA,MAAA,aAAa,CAAC,IAAd,GAAqB,IAArB;AACH,KAvB6B,CAyB9B;;;AACA,QAAI,aAAJ;;AACA,QAAI,MAAM,CAAC,0BAAD,CAAV,EAAwC;AACpC,MAAA,aAAa,GAAG;AACZ,QAAA,KAAK,EAAE;AACH,UAAA,MAAM,EAAE,MAAM,CAAC,0BAAD,CADX;AAEH,UAAA,MAAM,EAAE,MAAM,CAAC,iCAAD;AAFX;AADK,OAAhB;AAMH,KAPD,MAOO;AACH,MAAA,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC,OAAP,IAAkB,MAArB,GAA8B,EAApD;AACH;;AACD,IAAA,aAAa,CAAC,SAAd,GAA0B,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,aAAa,CAAC,SAAhC,EAA2C,MAAM,CAAC,SAAlD,CAA1B;AACA,IAAA,aAAa,CAAC,IAAd,GAAqB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,aAAa,CAAC,IAAhC,EAAsC,MAAM,CAAC,IAA7C,CAArB;AACA,IAAA,aAAa,CAAC,OAAd,GAAwB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,aAAlB,CAAxB;AACA,IAAA,MAAM,CAAC,KAAP,CAAa,cAAb,EAA6B,MAA7B,EAAqC,kBAArC,EAAyD,aAAzD;AACA,WAAO,aAAP;AACH,GA1CM;;AA2CX,SAAA,MAAA;AAAC,CA5CD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Logger_1 = require(\"./Logger\");\nvar logger = new Logger_1.ConsoleLogger('Parser');\nvar Parser = /** @class */ (function () {\n    function Parser() {\n    }\n    Parser.parseMobilehubConfig = function (config) {\n        var amplifyConfig = {};\n        // Analytics\n        if (config['aws_mobile_analytics_app_id']) {\n            var Analytics = {\n                AWSPinpoint: {\n                    appId: config['aws_mobile_analytics_app_id'],\n                    region: config['aws_mobile_analytics_app_region']\n                }\n            };\n            amplifyConfig.Analytics = Analytics;\n        }\n        // Auth\n        if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n            var Auth = {\n                userPoolId: config['aws_user_pools_id'],\n                userPoolWebClientId: config['aws_user_pools_web_client_id'],\n                region: config['aws_cognito_region'],\n                identityPoolId: config['aws_cognito_identity_pool_id'],\n                mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable' ? true : false\n            };\n            amplifyConfig.Auth = Auth;\n        }\n        // Storage\n        var storageConfig;\n        if (config['aws_user_files_s3_bucket']) {\n            storageConfig = {\n                AWSS3: {\n                    bucket: config['aws_user_files_s3_bucket'],\n                    region: config['aws_user_files_s3_bucket_region']\n                }\n            };\n        }\n        else {\n            storageConfig = config ? config.Storage || config : {};\n        }\n        amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n        amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n        amplifyConfig.Storage = Object.assign({}, storageConfig);\n        logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n        return amplifyConfig;\n    };\n    return Parser;\n}());\nexports.default = Parser;\n//# sourceMappingURL=Parser.js.map"]},"metadata":{},"sourceType":"script"}