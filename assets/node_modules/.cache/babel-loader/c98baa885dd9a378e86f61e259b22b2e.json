{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n\nvar core_1 = require(\"@aws-amplify/core\");\n\nvar logger = new core_1.ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\n\nvar StorageCache =\n/** @class */\nfunction () {\n  /**\n   * Initialize the cache\n   * @param config - the configuration of the cache\n   */\n  function StorageCache(config) {\n    this.config = Object.assign({}, config);\n    this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n    this.checkConfig();\n  }\n\n  StorageCache.prototype.getModuleName = function () {\n    return 'Cache';\n  };\n\n  StorageCache.prototype.checkConfig = function () {\n    // check configuration\n    if (!Utils_1.isInteger(this.config.capacityInBytes)) {\n      logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n      this.config.capacityInBytes = Utils_1.defaultConfig.capacityInBytes;\n    }\n\n    if (!Utils_1.isInteger(this.config.itemMaxSize)) {\n      logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n      this.config.itemMaxSize = Utils_1.defaultConfig.itemMaxSize;\n    }\n\n    if (!Utils_1.isInteger(this.config.defaultTTL)) {\n      logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n      this.config.defaultTTL = Utils_1.defaultConfig.defaultTTL;\n    }\n\n    if (!Utils_1.isInteger(this.config.defaultPriority)) {\n      logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n      this.config.defaultPriority = Utils_1.defaultConfig.defaultPriority;\n    }\n\n    if (this.config.itemMaxSize > this.config.capacityInBytes) {\n      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n      this.config.itemMaxSize = Utils_1.defaultConfig.itemMaxSize;\n    }\n\n    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n      this.config.defaultPriority = Utils_1.defaultConfig.defaultPriority;\n    }\n\n    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n      this.config.warningThreshold = Utils_1.defaultConfig.warningThreshold;\n    } // set 5MB limit\n\n\n    var cacheLimit = 5 * 1024 * 1024;\n\n    if (this.config.capacityInBytes > cacheLimit) {\n      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n      this.config.capacityInBytes = Utils_1.defaultConfig.capacityInBytes;\n    }\n  };\n  /**\n  * produce a JSON object with meta-data and data value\n  * @param value - the value of the item\n  * @param options - optional, the specified meta-data\n  *\n  * @return - the item which has the meta-data and the value\n  */\n\n\n  StorageCache.prototype.fillCacheItem = function (key, value, options) {\n    var ret = {\n      key: key,\n      data: value,\n      timestamp: Utils_1.getCurrTime(),\n      visitedTime: Utils_1.getCurrTime(),\n      priority: options.priority,\n      expires: options.expires,\n      type: typeof value,\n      byteSize: 0\n    };\n    ret.byteSize = Utils_1.getByteLength(JSON.stringify(ret)); // for accurate size\n\n    ret.byteSize = Utils_1.getByteLength(JSON.stringify(ret));\n    return ret;\n  };\n  /**\n   * set cache with customized configuration\n   * @param config - customized configuration\n   *\n   * @return - the current configuration\n   */\n\n\n  StorageCache.prototype.configure = function (config) {\n    if (!config) {\n      return this.config;\n    }\n\n    if (config.keyPrefix) {\n      logger.warn(\"Don't try to configure keyPrefix!\");\n    }\n\n    this.config = Object.assign({}, this.config, config, config.Cache);\n    this.checkConfig();\n    return this.config;\n  };\n\n  return StorageCache;\n}();\n\nexports.default = StorageCache;","map":{"version":3,"sources":["../src/StorageCache.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils_1 = require(\"./Utils\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar logger = new core_1.ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nvar StorageCache = /** @class */ (function () {\n    /**\n     * Initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function StorageCache(config) {\n        this.config = Object.assign({}, config);\n        this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n        this.checkConfig();\n    }\n    StorageCache.prototype.getModuleName = function () {\n        return 'Cache';\n    };\n    StorageCache.prototype.checkConfig = function () {\n        // check configuration\n        if (!Utils_1.isInteger(this.config.capacityInBytes)) {\n            logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n            this.config.capacityInBytes = Utils_1.defaultConfig.capacityInBytes;\n        }\n        if (!Utils_1.isInteger(this.config.itemMaxSize)) {\n            logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n            this.config.itemMaxSize = Utils_1.defaultConfig.itemMaxSize;\n        }\n        if (!Utils_1.isInteger(this.config.defaultTTL)) {\n            logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n            this.config.defaultTTL = Utils_1.defaultConfig.defaultTTL;\n        }\n        if (!Utils_1.isInteger(this.config.defaultPriority)) {\n            logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n            this.config.defaultPriority = Utils_1.defaultConfig.defaultPriority;\n        }\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = Utils_1.defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = Utils_1.defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = Utils_1.defaultConfig.warningThreshold;\n        }\n        // set 5MB limit\n        var cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = Utils_1.defaultConfig.capacityInBytes;\n        }\n    };\n    /**\n    * produce a JSON object with meta-data and data value\n    * @param value - the value of the item\n    * @param options - optional, the specified meta-data\n    *\n    * @return - the item which has the meta-data and the value\n    */\n    StorageCache.prototype.fillCacheItem = function (key, value, options) {\n        var ret = {\n            key: key,\n            data: value,\n            timestamp: Utils_1.getCurrTime(),\n            visitedTime: Utils_1.getCurrTime(),\n            priority: options.priority,\n            expires: options.expires,\n            type: typeof value,\n            byteSize: 0\n        };\n        ret.byteSize = Utils_1.getByteLength(JSON.stringify(ret));\n        // for accurate size\n        ret.byteSize = Utils_1.getByteLength(JSON.stringify(ret));\n        return ret;\n    };\n    /**\n     * set cache with customized configuration\n     * @param config - customized configuration\n     *\n     * @return - the current configuration\n     */\n    StorageCache.prototype.configure = function (config) {\n        if (!config) {\n            return this.config;\n        }\n        if (config.keyPrefix) {\n            logger.warn(\"Don't try to configure keyPrefix!\");\n        }\n        this.config = Object.assign({}, this.config, config, config.Cache);\n        this.checkConfig();\n        return this.config;\n    };\n    return StorageCache;\n}());\nexports.default = StorageCache;\n//# sourceMappingURL=StorageCache.js.map"]},"metadata":{},"sourceType":"script"}