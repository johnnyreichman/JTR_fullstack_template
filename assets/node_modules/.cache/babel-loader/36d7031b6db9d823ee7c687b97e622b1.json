{"ast":null,"code":"import _regeneratorRuntime from \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/src/modules/signup/Signup.tsx\";\nimport Auth from \"@aws-amplify/auth\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { Form, FormGroup, FormControl, FormLabel, Button, Spinner } from \"react-bootstrap\";\nimport \"./signup.css\";\nimport \"./home.css\";\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport default class Signup extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.onChange = event => {\n      const target = event.target;\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        [target.name]: target.value\n      }));\n    };\n\n    this.onSignup = event => {\n      event.preventDefault();\n\n      if (event.currentTarget.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.setState({\n          loading: true,\n          validated: true\n        });\n        Auth.signUp({\n          username: this.state.email,\n          password: this.state.password\n        }).then(value => {\n          this.setState({\n            user: value.user,\n            loading: false\n          });\n        }).catch(e => {\n          alert(e.message);\n          this.setState({\n            loading: false\n          });\n        });\n      }\n\n      this.setState({\n        validated: true\n      });\n    };\n\n    this.onConfirm = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return Auth.confirmSignUp(_this.state.email, _this.state.confirmationCode);\n\n            case 5:\n              _context.next = 7;\n              return Auth.signIn(_this.state.email, _this.state.password);\n\n            case 7:\n              _this.props.userHasAuthenticated(true);\n\n              _this.setState({\n                redirect: true\n              });\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              alert(_context.t0.message);\n\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.validateSignupForm = () => {\n      return emailRegex.test(this.state.email.toLowerCase()) && this.state.confirmPassword.length >= 8 && this.state.password === this.state.confirmPassword;\n    };\n\n    this.validateConfirmForm = () => {\n      return this.state.confirmationCode;\n    };\n\n    this.showConfirmationForm = () => {\n      if (this.state.redirect) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      });\n      const confirmationCode = this.state.confirmationCode;\n      return /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        onSubmit: this.onConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"confirmationCode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"Confirmation code\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"confirmationCode\",\n        type: \"tel\",\n        value: confirmationCode,\n        onChange: this.onChange,\n        minLength: 1,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, \"A confirmation code will be sent to the email address provided\")), /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        type: \"submit\",\n        disabled: !this.validateConfirmForm(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        size: \"sm\",\n        animation: \"border\",\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }), \"Confirming\") : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, \"Confirm\")));\n    };\n\n    this.showSignupForm = () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword,\n            validated = _this$state.validated;\n      return /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: e => this.onSignup(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"email\",\n        type: \"email\",\n        onChange: this.onChange,\n        value: email,\n        minLength: 5,\n        isValid: emailRegex.test(email.toLowerCase()),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, \"Must be a valid email address\")), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"password\",\n        type: \"password\",\n        onChange: this.onChange,\n        value: password,\n        minLength: 8,\n        isValid: password.length >= 8,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, \"Must be at least 8 characters\"), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, \"Must be at least 8 characters\")), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, \"Confirm Password\"), /*#__PURE__*/React.createElement(FormControl, {\n        name: \"confirmPassword\",\n        type: \"password\",\n        onChange: this.onChange,\n        value: confirmPassword,\n        minLength: 8,\n        isValid: confirmPassword.length >= 8 && password === confirmPassword,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, \"Passwords must be identical\")), /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        type: \"submit\",\n        disabled: !this.validateSignupForm(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        size: \"sm\",\n        animation: \"border\",\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      }), \"Signing up\") : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, \"Sign up\")));\n    };\n\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      user: undefined,\n      redirect: false,\n      validated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, this.state.user === undefined ? this.showSignupForm() : this.showConfirmationForm());\n  }\n\n}","map":{"version":3,"sources":["/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/src/modules/signup/Signup.tsx"],"names":["Auth","React","Redirect","Form","FormGroup","FormControl","FormLabel","Button","Spinner","emailRegex","Signup","Component","constructor","props","onChange","event","target","setState","state","name","value","onSignup","preventDefault","currentTarget","checkValidity","stopPropagation","loading","validated","signUp","username","email","password","then","user","catch","e","alert","message","onConfirm","confirmSignUp","confirmationCode","signIn","userHasAuthenticated","redirect","validateSignupForm","test","toLowerCase","confirmPassword","length","validateConfirmForm","showConfirmationForm","showSignupForm","undefined","render"],"mappings":"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","sourcesContent":["import Auth from \"@aws-amplify/auth\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { Form, FormGroup, FormControl, FormLabel, Button, Spinner, FormControlProps } from \"react-bootstrap\";\nimport \"./signup.css\";\nimport \"./home.css\";\nimport { ISignUpResult } from \"amazon-cognito-identity-js\";\n\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\ninterface SignupProps {\n  isAuthenticated: boolean;\n  userHasAuthenticated: (authenticated: boolean) => void;\n}\n\ninterface SignupState {\n  loading: boolean;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  confirmationCode: string;\n  user: any;\n  redirect: boolean;\n  validated: boolean;\n}\n\nexport default class Signup extends React.Component<SignupProps, SignupState> {\n  constructor(props: SignupProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      user: undefined,\n      redirect: false,\n      validated: false,\n    };\n  }\n\n  onChange = (event: React.FormEvent<FormControlProps>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({ ...this.state, [target.name]: target.value });\n  }\n\n  onSignup = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    if (event.currentTarget.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      this.setState({ loading: true, validated: true });\n\n      Auth.signUp({\n        username: this.state.email,\n        password: this.state.password\n      }).then((value: ISignUpResult) => {\n        this.setState({ user: value.user, loading: false });\n      }).catch((e: any) => {\n        alert(e.message);\n        this.setState({ loading: false });\n      });\n    }\n    this.setState({ validated: true });\n\n  }\n\n  onConfirm = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    try {\n      await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n      await Auth.signIn(this.state.email, this.state.password);\n      this.props.userHasAuthenticated(true);\n      this.setState({ redirect: true })\n    } catch (e) {\n      alert(e.message);\n      this.setState({ loading: false });\n    }\n  }\n\n  validateSignupForm = () => {\n    return emailRegex.test(this.state.email.toLowerCase()) && \n      this.state.confirmPassword.length >= 8 && \n      this.state.password === this.state.confirmPassword\n  }\n\n  validateConfirmForm = () => {\n    return this.state.confirmationCode;\n  }\n\n  showConfirmationForm = () => {\n    if (this.state.redirect) return <Redirect to='/' />\n    const { confirmationCode } = this.state;\n\n    return (\n      <Form noValidate onSubmit={this.onConfirm}>\n        <FormGroup controlId=\"confirmationCode\">\n          <FormLabel>Confirmation code</FormLabel>\n          <FormControl\n            name=\"confirmationCode\"\n            type=\"tel\"\n            value={confirmationCode}\n            onChange={this.onChange}\n            minLength={1}\n            required />\n          <FormControl.Feedback />\n          <Form.Text className=\"text-muted\">\n            A confirmation code will be sent to the email address provided\n          </Form.Text>\n        </FormGroup>\n        <Button block type=\"submit\" disabled={!this.validateConfirmForm()}>\n          {this.state.loading ?\n            <span><Spinner size=\"sm\" animation=\"border\" className=\"mr-2\" />Confirming</span> :\n            <span>Confirm</span>}\n        </Button>\n      </Form>\n    );\n  }\n\n  showSignupForm = () => {\n    const { email, password, confirmPassword, validated } = this.state;\n    return (\n      <Form noValidate validated={validated} onSubmit={(e: React.FormEvent<HTMLFormElement>) => this.onSignup(e)}>\n        <FormGroup controlId=\"email\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            name=\"email\"\n            type=\"email\"\n            onChange={this.onChange}\n            value={email}\n            minLength={5}\n            isValid={emailRegex.test(email.toLowerCase())}\n            required />\n          <FormControl.Feedback type=\"invalid\">Must be a valid email address</FormControl.Feedback>\n        </FormGroup>\n        <FormGroup controlId=\"password\" >\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            name=\"password\"\n            type=\"password\"\n            onChange={this.onChange}\n            value={password}\n            minLength={8}\n            isValid={password.length >= 8}\n            required />\n          <FormControl.Feedback type=\"invalid\">Must be at least 8 characters</FormControl.Feedback>\n          <Form.Text className=\"text-muted\">\n            Must be at least 8 characters\n          </Form.Text>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Confirm Password</FormLabel>\n          <FormControl\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={this.onChange}\n            value={confirmPassword}\n            minLength={8}\n            isValid={confirmPassword.length >= 8 && password === confirmPassword}\n            required />\n          <FormControl.Feedback type=\"invalid\">Passwords must be identical</FormControl.Feedback>\n        </FormGroup>\n        <Button block type=\"submit\" disabled={!this.validateSignupForm()}>\n          {this.state.loading ?\n            <span><Spinner size=\"sm\" animation=\"border\" className=\"mr-2\" />Signing up</span> :\n            <span>Sign up</span>}\n        </Button>\n      </Form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        {this.state.user === undefined ? this.showSignupForm() : this.showConfirmationForm()}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}