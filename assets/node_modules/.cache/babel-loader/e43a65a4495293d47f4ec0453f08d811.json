{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar I18n_1 = require(\"./I18n\");\n\nvar Logger_1 = require(\"../Logger\");\n\nvar Amplify_1 = require(\"../Amplify\");\n\nvar logger = new Logger_1.ConsoleLogger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\n * Export I18n APIs\n */\n\nvar I18n =\n/** @class */\nfunction () {\n  function I18n() {}\n  /**\n   * @static\n   * @method\n   * Configure I18n part\n   * @param {Object} config - Configuration of the I18n\n   */\n\n\n  I18n.configure = function (config) {\n    logger.debug('configure I18n');\n\n    if (!config) {\n      return _config;\n    }\n\n    _config = Object.assign({}, _config, config.I18n || config);\n    I18n.createInstance();\n    return _config;\n  };\n\n  I18n.getModuleName = function () {\n    return 'I18n';\n  };\n  /**\n   * @static\n   * @method\n   * Create an instance of I18n for the library\n   */\n\n\n  I18n.createInstance = function () {\n    logger.debug('create I18n instance');\n\n    if (_i18n) {\n      return;\n    }\n\n    _i18n = new I18n_1.I18n(_config);\n  };\n  /**\n   * @static @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n\n\n  I18n.setLanguage = function (lang) {\n    I18n.checkConfig();\n    return _i18n.setLanguage(lang);\n  };\n  /**\n   * @static @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n\n\n  I18n.get = function (key, defVal) {\n    if (!I18n.checkConfig()) {\n      return typeof defVal === 'undefined' ? key : defVal;\n    }\n\n    return _i18n.get(key, defVal);\n  };\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {String} langurage - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n\n\n  I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n    I18n.checkConfig();\n    return _i18n.putVocabulariesForLanguage(language, vocabularies);\n  };\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n\n\n  I18n.putVocabularies = function (vocabularies) {\n    I18n.checkConfig();\n    return _i18n.putVocabularies(vocabularies);\n  };\n\n  I18n.checkConfig = function () {\n    if (!_i18n) {\n      _i18n = new I18n_1.I18n(_config);\n    }\n\n    return true;\n  };\n\n  return I18n;\n}();\n\nAmplify_1.default.register(I18n);\nexports.default = I18n;","map":{"version":3,"sources":["../../src/I18n/index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;AAaA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAEA,IAAM,MAAM,GAAG,IAAI,QAAA,CAAA,aAAJ,CAAW,MAAX,CAAf;AAEA,IAAI,OAAO,GAAG,IAAd;AACA,IAAI,KAAK,GAAG,IAAZ;AAEA;;;;AAGA,IAAA,IAAA;AAAA;AAAA,YAAA;AAAA,WAAA,IAAA,GAAA,CAuFC;AAtFG;;;;;;;;AAMO,EAAA,IAAA,CAAA,SAAA,GAAP,UAAiB,MAAjB,EAAuB;AACnB,IAAA,MAAM,CAAC,KAAP,CAAa,gBAAb;;AACA,QAAI,CAAC,MAAL,EAAa;AAAE,aAAO,OAAP;AAAiB;;AAEhC,IAAA,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B,MAAM,CAAC,IAAP,IAAe,MAA1C,CAAV;AAEA,IAAA,IAAI,CAAC,cAAL;AAEA,WAAO,OAAP;AACH,GATM;;AAWA,EAAA,IAAA,CAAA,aAAA,GAAP,YAAA;AACI,WAAO,MAAP;AACH,GAFM;AAIR;;;;;;;AAKQ,EAAA,IAAA,CAAA,cAAA,GAAP,YAAA;AACI,IAAA,MAAM,CAAC,KAAP,CAAa,sBAAb;;AACA,QAAI,KAAJ,EAAW;AAAE;AAAS;;AACtB,IAAA,KAAK,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAc,OAAd,CAAR;AACH,GAJM;AAMP;;;;;;;AAKO,EAAA,IAAA,CAAA,WAAA,GAAP,UAAmB,IAAnB,EAAuB;AACnB,IAAA,IAAI,CAAC,WAAL;AAEA,WAAO,KAAK,CAAC,WAAN,CAAkB,IAAlB,CAAP;AACH,GAJM;AAMP;;;;;;;;AAMO,EAAA,IAAA,CAAA,GAAA,GAAP,UAAW,GAAX,EAAgB,MAAhB,EAAuB;AACnB,QAAI,CAAC,IAAI,CAAC,WAAL,EAAL,EAAyB;AAAE,aAAQ,OAAO,MAAP,KAAkB,WAAnB,GAAiC,GAAjC,GAAuC,MAA9C;AAAuD;;AAElF,WAAO,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,MAAf,CAAP;AACH,GAJM;AAMP;;;;;;;;;AAOO,EAAA,IAAA,CAAA,0BAAA,GAAP,UAAkC,QAAlC,EAA4C,YAA5C,EAAwD;AACpD,IAAA,IAAI,CAAC,WAAL;AAEA,WAAO,KAAK,CAAC,0BAAN,CAAiC,QAAjC,EAA2C,YAA3C,CAAP;AACH,GAJM;AAMP;;;;;;;;;AAOO,EAAA,IAAA,CAAA,eAAA,GAAP,UAAuB,YAAvB,EAAmC;AAC/B,IAAA,IAAI,CAAC,WAAL;AAEA,WAAO,KAAK,CAAC,eAAN,CAAsB,YAAtB,CAAP;AACH,GAJM;;AAMO,EAAA,IAAA,CAAA,WAAA,GAAd,YAAA;AACI,QAAI,CAAC,KAAL,EAAY;AAAE,MAAA,KAAK,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAc,OAAd,CAAR;AAAiC;;AAE/C,WAAO,IAAP;AACH,GAJa;;AAKlB,SAAA,IAAA;AAAC,CAvFD,EAAA;;AAyFA,SAAA,CAAA,OAAA,CAAQ,QAAR,CAAiB,IAAjB;AACA,OAAA,CAAA,OAAA,GAAe,IAAf","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar I18n_1 = require(\"./I18n\");\nvar Logger_1 = require(\"../Logger\");\nvar Amplify_1 = require(\"../Amplify\");\nvar logger = new Logger_1.ConsoleLogger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\n * Export I18n APIs\n */\nvar I18n = /** @class */ (function () {\n    function I18n() {\n    }\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    I18n.configure = function (config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    };\n    I18n.getModuleName = function () {\n        return 'I18n';\n    };\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    I18n.createInstance = function () {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18n_1.I18n(_config);\n    };\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.setLanguage = function (lang) {\n        I18n.checkConfig();\n        return _i18n.setLanguage(lang);\n    };\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.get = function (key, defVal) {\n        if (!I18n.checkConfig()) {\n            return (typeof defVal === 'undefined') ? key : defVal;\n        }\n        return _i18n.get(key, defVal);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabulariesForLanguage(language, vocabularies);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.putVocabularies = function (vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabularies(vocabularies);\n    };\n    I18n.checkConfig = function () {\n        if (!_i18n) {\n            _i18n = new I18n_1.I18n(_config);\n        }\n        return true;\n    };\n    return I18n;\n}());\nAmplify_1.default.register(I18n);\nexports.default = I18n;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}