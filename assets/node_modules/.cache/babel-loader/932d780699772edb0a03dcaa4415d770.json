{"ast":null,"code":"import _regeneratorRuntime from \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/src/modules/signup/Login.tsx\";\nimport React from \"react\";\nimport { Redirect } from 'react-router';\nimport { Form, FormGroup, FormControl, FormLabel, Button, Spinner } from \"react-bootstrap\";\nimport Auth from \"@aws-amplify/auth\";\nimport \"./login.css\";\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport default class Login extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.onChange = event => {\n      const target = event.target;\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        [target.name]: target.value\n      }));\n    };\n\n    this.validateForm = () => {\n      return emailRegex.test(this.state.email.toLowerCase()) && this.state.password;\n    };\n\n    this.onLogin = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!event.currentTarget.checkValidity()) {\n                _context.next = 15;\n                break;\n              }\n\n              event.preventDefault();\n              event.stopPropagation();\n\n              _this.setState({\n                isValid: true,\n                loading: true\n              });\n\n              _context.prev = 4;\n              _context.next = 7;\n              return Auth.signIn(_this.state.email, _this.state.password);\n\n            case 7:\n              _this.props.userHasAuthenticated(true);\n\n              _this.setState({\n                redirect: true\n              });\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              alert(_context.t0.message);\n\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.state = {\n      loading: false,\n      redirect: false,\n      email: \"\",\n      password: \"\",\n      isValid: false\n    };\n  }\n\n  render() {\n    if (this.state.redirect) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    });\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          isValid = _this$state.isValid;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: isValid,\n      onSubmit: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      onChange: this.onChange,\n      isValid: emailRegex.test(email.toLowerCase()),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Must be a valid email address\")), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.onChange,\n      minLength: 8,\n      isValid: password.length >= 8,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControl.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Required field\")), /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: \"submit\",\n      disabled: !this.validateForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, this.state.loading ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      size: \"sm\",\n      animation: \"border\",\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), \"Logging in\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"Log in\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/JohnnyReichman/Documents/independent_work/fullstack_template/JTR_fullstack_template/assets/src/modules/signup/Login.tsx"],"names":["React","Redirect","Form","FormGroup","FormControl","FormLabel","Button","Spinner","Auth","emailRegex","Login","Component","constructor","props","onChange","event","target","setState","state","name","value","validateForm","test","email","toLowerCase","password","onLogin","currentTarget","checkValidity","preventDefault","stopPropagation","isValid","loading","signIn","userHasAuthenticated","redirect","alert","message","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from 'react-router';\nimport { Form, FormGroup, FormControl, FormLabel, Button, Spinner, FormControlProps } from \"react-bootstrap\";\nimport Auth from \"@aws-amplify/auth\";\nimport \"./login.css\";\n\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\ninterface LoginProps {\n  isAuthenticated: boolean;\n  userHasAuthenticated: (authenticated: boolean) => void;\n}\n\ninterface LoginState {\n  loading: boolean;\n  redirect: boolean;\n  email: string;\n  password: string;\n  isValid: boolean;\n}\n\nexport default class Login extends React.Component<LoginProps, LoginState> {\n  constructor(props: LoginProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      redirect: false,\n      email: \"\",\n      password: \"\",\n      isValid: false,\n    };\n  }\n\n  onChange = (event: React.FormEvent<FormControlProps>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({ ...this.state, [target.name]: target.value });\n  }\n\n  validateForm = () => {\n    return emailRegex.test(this.state.email.toLowerCase()) && this.state.password;\n  }\n\n  onLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n    if (event.currentTarget.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ isValid: true, loading: true });\n\n      try {\n        await Auth.signIn(this.state.email, this.state.password);\n        this.props.userHasAuthenticated(true);\n        this.setState({ redirect: true })\n      } catch (e) {\n        alert(e.message);\n        this.setState({ loading: false });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.redirect) return <Redirect to='/' />\n    const { email, password, isValid } = this.state;\n\n    return (\n      <div className=\"Login\">\n        <Form noValidate validated={isValid} onSubmit={this.onLogin}>\n          <FormGroup controlId=\"email\">\n            <FormLabel>Email</FormLabel>\n            <FormControl\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={this.onChange}\n              isValid={emailRegex.test(email.toLowerCase())}\n              required />\n            <FormControl.Feedback type=\"invalid\">Must be a valid email address</FormControl.Feedback>\n          </FormGroup>\n          <FormGroup controlId=\"password\">\n            <FormLabel>Password</FormLabel>\n            <FormControl\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={this.onChange}\n              minLength={8}\n              isValid={password.length >= 8}\n              required />\n            <FormControl.Feedback type=\"invalid\">Required field</FormControl.Feedback>\n          </FormGroup>\n          <Button\n            block\n            type=\"submit\"\n            disabled={!this.validateForm()}>\n            {this.state.loading ?\n              <span><Spinner size=\"sm\" animation=\"border\" className=\"mr-2\" />Logging in</span> :\n              <span>Log in</span>}\n          </Button>\n        </Form >\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}